package Kirjahylly.test;
// Generated by ComTest BEGIN
import java.util.*;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import Kirjahylly.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.08.29 15:38:05 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class LisatiedotTest {



  // Generated by ComTest BEGIN
  /** testLisaa53 */
  @Test
  public void testLisaa53() {    // Lisatiedot: 53
    Lisatiedot tiedot = new Lisatiedot(); 
    Lisatieto tieto1 = new Lisatieto(2); tiedot.lisaa(tieto1); 
    Lisatieto tieto2 = new Lisatieto(1); tiedot.lisaa(tieto2); 
    Lisatieto tieto3 = new Lisatieto(2); tiedot.lisaa(tieto3); 
    Lisatieto tieto4 = new Lisatieto(1); tiedot.lisaa(tieto4); 
    Lisatieto tieto5 = new Lisatieto(2); tiedot.lisaa(tieto5); 
    Lisatieto tieto6 = new Lisatieto(5); tiedot.lisaa(tieto6); 
    List<Lisatieto> loytyneet; 
    loytyneet = tiedot.annaTiedot(3); 
    assertEquals("From: Lisatiedot line: 64", 0, loytyneet.size()); 
    loytyneet = tiedot.annaTiedot(1); 
    assertEquals("From: Lisatiedot line: 66", 2, loytyneet.size()); 
    assertEquals("From: Lisatiedot line: 67", true, loytyneet.get(0) == tieto2); 
    assertEquals("From: Lisatiedot line: 68", true, loytyneet.get(1) == tieto4); 
    loytyneet = tiedot.annaTiedot(5); 
    assertEquals("From: Lisatiedot line: 70", 1, loytyneet.size()); 
    assertEquals("From: Lisatiedot line: 71", true, loytyneet.get(0) == tieto6); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaa84 */
  @Test
  public void testKorvaaTaiLisaa84() {    // Lisatiedot: 84
    Lisatiedot lisatiedot = new Lisatiedot(); 
    Lisatieto tieto11 = new Lisatieto(2); lisatiedot.lisaa(tieto11); 
    Lisatieto tieto22 = new Lisatieto(2); lisatiedot.lisaa(tieto22); 
    tieto11.parse("1  |2  |testi1 |hyllymbyvör"); 
    tieto22.parse("2  |2  |testi2 |miumau"); 
    Lisatieto tieto33 = new Lisatieto(2); 
    tieto33.parse("3  |2  |testi3 |Pepputemppu"); 
    Lisatieto tieto44 = new Lisatieto(2); 
    tieto44.parse("1  |2  |testi4 |Hymynaama"); 
    List<Lisatieto> hitit; 
    hitit = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 96", "testi1", hitit.get(0).getNimi()); 
    lisatiedot.korvaaTaiLisaa(tieto33); 
    hitit = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 99", 3, hitit.size()); 
    lisatiedot.korvaaTaiLisaa(tieto44); 
    hitit = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 102", "testi4", hitit.get(0).getNimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaKirjanLisatiedot123 */
  @Test
  public void testPoistaKirjanLisatiedot123() {    // Lisatiedot: 123
    Lisatiedot lisatiedot = new Lisatiedot(); 
    Lisatieto tieto11 = new Lisatieto(2); lisatiedot.lisaa(tieto11); 
    Lisatieto tieto22 = new Lisatieto(1); lisatiedot.lisaa(tieto22); 
    Lisatieto tieto33 = new Lisatieto(2); lisatiedot.lisaa(tieto33); 
    Lisatieto tieto44 = new Lisatieto(1); lisatiedot.lisaa(tieto44); 
    Lisatieto tieto55 = new Lisatieto(2); lisatiedot.lisaa(tieto55); 
    Lisatieto tieto66 = new Lisatieto(5); lisatiedot.lisaa(tieto66); 
    List<Lisatieto> loytyneet; 
    loytyneet = lisatiedot.annaTiedot(1); 
    assertEquals("From: Lisatiedot line: 134", 2, loytyneet.size()); 
    lisatiedot.poistaKirjanLisatiedot(1); 
    loytyneet = lisatiedot.annaTiedot(1); 
    assertEquals("From: Lisatiedot line: 137", 0, loytyneet.size()); 
    loytyneet = lisatiedot.annaTiedot(5); 
    assertEquals("From: Lisatiedot line: 139", 1, loytyneet.size()); 
    lisatiedot.poistaKirjanLisatiedot(5); 
    loytyneet = lisatiedot.annaTiedot(5); 
    assertEquals("From: Lisatiedot line: 142", 0, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaLisatieto162 */
  @Test
  public void testPoistaLisatieto162() {    // Lisatiedot: 162
    Lisatiedot lisatiedot = new Lisatiedot(); 
    Lisatieto tieto11 = new Lisatieto(2); lisatiedot.lisaa(tieto11); 
    Lisatieto tieto22 = new Lisatieto(1); lisatiedot.lisaa(tieto22); 
    Lisatieto tieto33 = new Lisatieto(2); lisatiedot.lisaa(tieto33); 
    tieto11.parse("4 |2| lisatietoinen | priipryy "); 
    tieto22.parse("5 |2| lisatietoinen2| priipryyrpöö "); 
    tieto33.parse("3 |2| lisatietoinen3| prööpriipryy "); 
    List <Lisatieto> loytyneet; 
    loytyneet = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 173", 3, loytyneet.size()); 
    lisatiedot.poistaLisatieto(5); 
    loytyneet = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 176", 2, loytyneet.size()); 
    lisatiedot.poistaLisatieto(3); 
    loytyneet = lisatiedot.annaTiedot(2); 
    assertEquals("From: Lisatiedot line: 179", 1, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaTiedot197 */
  @Test
  public void testAnnaTiedot197() {    // Lisatiedot: 197
    Lisatiedot lisatiedot = new Lisatiedot(); 
    Lisatieto tieto11 = new Lisatieto(2); lisatiedot.lisaa(tieto11); 
    Lisatieto tieto22 = new Lisatieto(1); lisatiedot.lisaa(tieto22); 
    Lisatieto tieto33 = new Lisatieto(2); lisatiedot.lisaa(tieto33); 
    Lisatieto tieto44 = new Lisatieto(1); lisatiedot.lisaa(tieto44); 
    Lisatieto tieto55 = new Lisatieto(2); lisatiedot.lisaa(tieto55); 
    Lisatieto tieto66 = new Lisatieto(5); lisatiedot.lisaa(tieto66); 
    List<Lisatieto> loytyneet; 
    loytyneet = lisatiedot.annaTiedot(3); 
    assertEquals("From: Lisatiedot line: 208", 0, loytyneet.size()); 
    loytyneet = lisatiedot.annaTiedot(1); 
    assertEquals("From: Lisatiedot line: 210", 2, loytyneet.size()); 
    assertEquals("From: Lisatiedot line: 211", true, loytyneet.get(0) == tieto22); 
    assertEquals("From: Lisatiedot line: 212", true, loytyneet.get(1) == tieto44); 
    loytyneet = lisatiedot.annaTiedot(5); 
    assertEquals("From: Lisatiedot line: 214", 1, loytyneet.size()); 
    assertEquals("From: Lisatiedot line: 215", true, loytyneet.get(0) == tieto66); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta258 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta258() throws SailoException {    // Lisatiedot: 258
    Lisatiedot lisatiedot = new Lisatiedot(); 
    Lisatieto tieto1 = new Lisatieto(); tieto1.taytaLisatiedot(2); 
    Lisatieto tieto2 = new Lisatieto(); tieto2.taytaLisatiedot(1); 
    Lisatieto tieto3 = new Lisatieto(); tieto3.taytaLisatiedot(2); 
    Lisatieto tieto4 = new Lisatieto(); tieto4.taytaLisatiedot(1); 
    Lisatieto tieto5 = new Lisatieto(); tieto5.taytaLisatiedot(2); 
    String tiedNimi = "testitiedot.dat"; 
    File ftied = new File(tiedNimi); 
    ftied.delete(); 
    try {
    lisatiedot.lueTiedostosta(tiedNimi); 
    fail("Lisatiedot: 272 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    lisatiedot.lisaa(tieto1); 
    lisatiedot.lisaa(tieto2); 
    lisatiedot.lisaa(tieto3); 
    lisatiedot.lisaa(tieto4); 
    lisatiedot.lisaa(tieto5); 
    lisatiedot.tallenna(); 
    lisatiedot = new Lisatiedot(); 
    lisatiedot.lueTiedostosta(tiedNimi); 
    ArrayList<Lisatieto> tiet = lisatiedot.annaTiedot(2); 
    Iterator<Lisatieto> i = tiet.iterator(); 
    assertEquals("From: Lisatiedot line: 283", tieto1.toString(), i.next().toString()); 
    assertEquals("From: Lisatiedot line: 284", tieto3.toString(), i.next().toString()); 
    assertEquals("From: Lisatiedot line: 285", tieto5.toString(), i.next().toString()); 
    assertEquals("From: Lisatiedot line: 286", false, i.hasNext()); 
    lisatiedot.lisaa(tieto5); 
    lisatiedot.tallenna(); 
    assertEquals("From: Lisatiedot line: 289", true, ftied.delete()); 
  } // Generated by ComTest END
}